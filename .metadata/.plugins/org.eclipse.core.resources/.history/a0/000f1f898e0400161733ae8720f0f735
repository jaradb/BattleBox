package controller;
import battleBox.Constants;
import battleBox.Vector2;
import model.GameBoard;
import model.Token;
import view.ViewRenderer;

public class TurnController 
{
	public enum TurnState
	{
		waitingToSelectToken,
		waitingToMoveToken,
	}
	
	//Plz remove.
	public ViewRenderer viewRenderer;
	
	TurnState currentState = TurnState.waitingToSelectToken;
	
	Token tokenCurrentlySelected = null;
	
	public GameBoard boardToControl;
	
	public PlayerController player1;
	public PlayerController player2;
	
	private PlayerController currentPlayersTurn = null;
	
	float currentTurnTimer = 0;
	
	public void InitialisePlayers()
	{
		player1 = new PlayerController(1);
		player2 = new PlayerController(2);
		
		currentPlayersTurn = player1;
	}
	
	public void SwitchPlayers()
	{
		//Switch player
		if(currentPlayersTurn == player1)
		{
			viewRenderer.uiRenderer.SetCurrentPlayerIndicator(2);
			currentPlayersTurn = player2;
		}
		else if(currentPlayersTurn == player2) 
		{
			viewRenderer.uiRenderer.SetCurrentPlayerIndicator(1);
			currentPlayersTurn = player1;
		}
				
		currentTurnTimer = 0;
		currentState = TurnState.waitingToSelectToken;
		tokenCurrentlySelected = null;
	}
	
	public void UpdateTurn(float timeDelta)
	{
		if(timeDelta > 1.0) timeDelta = 1.0f;
		
		//Track how many seconds have passed.
		currentTurnTimer += timeDelta;
		
		if(currentTurnTimer > Constants.turnTimeInSeconds)
		{
			SwitchPlayers();
		}
		
		try
		{
			Thread.sleep(5);
		}
		catch (InterruptedException e)
		{
			e.printStackTrace();
		}
	}
	
	public void handleClickEvent(Vector2 clickGridLocation)
	{
		Token tokenClicked = boardToControl.GetTokenAtLocation(clickGridLocation);
		
		
		if(currentState == TurnState.waitingToSelectToken)
		{
			if(tokenClicked != null)
			{
				if(tokenClicked.tokenOwner == Token.Owner.player1 && currentPlayersTurn.playerIndex == 1)
				{
					//Got control of a token
					System.out.println("Player 1 got control of token!");
					
					currentState = TurnState.waitingToMoveToken;
					tokenCurrentlySelected = tokenClicked;
					
					viewRenderer.boardRenderer.crossHairLabel.setGridPosition(clickGridLocation);
					viewRenderer.boardRenderer.crossHairLabel.setVisible(true);
					viewRenderer.boardRenderer.HighlightTilesAroundPoint(clickGridLocation, true);
					
					return;
				}
				
				if(tokenClicked.tokenOwner == Token.Owner.player2 && currentPlayersTurn.playerIndex == 2)
				{
					//Got control of a token
					System.out.println("Player 2 got control of token!");
					
					currentState = TurnState.waitingToMoveToken;
					tokenCurrentlySelected = tokenClicked;
					
					viewRenderer.boardRenderer.crossHairLabel.setGridPosition(clickGridLocation);
					viewRenderer.boardRenderer.crossHairLabel.setVisible(true);
					viewRenderer.boardRenderer.HighlightTilesAroundPoint(clickGridLocation, true);
					
					return;
				}
			}
		}
		
		if(currentState == TurnState.waitingToMoveToken)
		{
			if(tokenClicked == null)
			{
				viewRenderer.boardRenderer.MoveTokenImage(tokenCurrentlySelected.gridPosition , clickGridLocation);
				
				viewRenderer.boardRenderer.HighlightTilesAroundPoint(clickGridLocation, false);
				
				tokenCurrentlySelected.gridPosition = clickGridLocation;
				System.out.println("Token just moved to new location!");
				
				viewRenderer.boardRenderer.crossHairLabel.setVisible(false);
				
				//Successfully made a move
				SwitchPlayers();
			}
		}

	}
	
	
	
	
}
